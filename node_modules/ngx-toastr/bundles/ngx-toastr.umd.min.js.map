{
  "version": 3,
  "file": "ngx-toastr.umd.min.js",
  "sources": [
    "ng://ngx-toastr/node_modules/tslib/tslib.es6.js",
    "ng://ngx-toastr/out/portal/portal.ts",
    "ng://ngx-toastr/out/portal/dom-portal-host.ts",
    "ng://ngx-toastr/out/overlay/overlay-ref.ts",
    "ng://ngx-toastr/out/overlay/overlay-container.ts",
    "ng://ngx-toastr/out/overlay/overlay.ts",
    "ng://ngx-toastr/out/toastr/toast.directive.ts",
    "ng://ngx-toastr/out/toastr/toastr-config.ts",
    "ng://ngx-toastr/out/toastr/toast-injector.ts",
    "ng://ngx-toastr/out/toastr/toast-token.ts",
    "ng://ngx-toastr/out/toastr/toastr.service.ts",
    "ng://ngx-toastr/out/toastr/toast.component.ts",
    "ng://ngx-toastr/out/toastr/default-config.ts",
    "ng://ngx-toastr/out/toastr/toastr.module.ts",
    "ng://ngx-toastr/out/toastr/toast-noanimation.component.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost?: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host?: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal?: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn?: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n",
    "import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n    private _hostDomElement: Element,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(\n    portal: ComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\n      portal.component,\n    );\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(\n        this._getComponentRootNode(componentRef),\n        this._hostDomElement.firstChild,\n      );\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n",
    "import { ComponentRef } from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(private _portalHost: BasePortalHost) {}\n\n  attach(\n    portal: ComponentPortal<any>,\n    newestOnTop: boolean = true,\n  ): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n",
    "/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n",
    "import { ApplicationRef, ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { ToastContainerDirective } from '../toastr/toast.directive';\nimport { OverlayContainer } from './overlay-container';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: {string?: HTMLElement} = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string = '', overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n",
    "import {\n  Directive,\n  ElementRef,\n  NgModule,\n} from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) { }\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective],\n})\nexport class ToastContainerModule {}\n",
    "import { SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast-injector';\n\n/**\n * Configuration for an individual toast.\n */\n export interface IndividualConfig {\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean;\n  /**\n  * toast time to live in milliseconds\n  * default: 5000\n  */\n  timeOut: number;\n  /**\n  * toast show close button\n  * default: false\n  */\n  closeButton: boolean;\n  /** time to close after a user hovers over toast */\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  extendedTimeOut: number;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar: boolean;\n\n  /**\n   * changes toast progress bar animation\n   * default: decreasing\n   */\n  progressAnimation?: 'increasing' | 'decreasing';\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n}\n\nexport interface ToastrIconClasses {\n  error: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n  iconClasses: Partial<ToastrIconClasses>;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates: boolean;\n}\n\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap = new Subject<any>();\n  private _onAction = new Subject<any>();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml | null | undefined,\n    public title: string | undefined,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    this._onTap.complete();\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n}\n\n/* tslint:disable:no-empty-interface */\nexport interface GlobalToastrConfig extends GlobalConfig {}\nexport interface IndividualToastrConfig extends IndividualConfig {}\nexport interface ToastrConfig extends IndividualConfig {}\n",
    "import { Injector } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed = new Subject<any>();\n  /** triggered when toast is activated */\n  private _activate = new Subject<any>();\n  /** notifies the toast that it should close before the timeout */\n  private _manualClose = new Subject<any>();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastPackage && this._toastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n",
    "import { InjectionToken } from '@angular/core';\n\nimport { GlobalConfig } from './toastr-config';\n\nexport interface ToastToken {\n  config: GlobalConfig;\n  defaults: any;\n}\n\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\n",
    "import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastToken, TOAST_CONFIG } from './toast-token';\nimport { ToastContainerDirective } from './toast.directive';\nimport {\n  GlobalConfig,\n  IndividualConfig,\n  ToastPackage,\n} from './toastr-config';\n\n\nexport interface ActiveToast {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<any>;\n  /** a reference to your toast */\n  toastRef: ToastRef<any>;\n  /** triggered when toast is active */\n  onShown: Observable<any>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<any>;\n  /** triggered on toast click */\n  onTap: Observable<any>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n\n@Injectable()\nexport class ToastrService {\n  toastrConfig: GlobalConfig;\n  currentlyActive = 0;\n  toasts: ActiveToast[] = [];\n  overlayContainer: ToastContainerDirective;\n  previousToastMessage: string | undefined;\n  private index = 0;\n\n  constructor(\n    @Inject(TOAST_CONFIG) token: ToastToken,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n    private ngZone: NgZone\n  ) {\n    const defaultConfig = new token.defaults;\n    this.toastrConfig = { ...defaultConfig, ...token.config };\n    this.toastrConfig.iconClasses = {\n      ...defaultConfig.iconClasses,\n      ...token.config.iconClasses,\n    };\n  }\n  /** show toast */\n  show(message?: string, title?: string, override: Partial<IndividualConfig> = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= +this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\n    return { ...this.toastrConfig, ...override };\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  private _preBuildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    if (message && this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage: string | SafeHtml | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const ins: ActiveToast = {\n      toastId: this.index,\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal: overlayRef.attach(component, this.toastrConfig.newestOnTop),\n    };\n\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n",
    "import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  Component,\n  HostBinding,\n  HostListener,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }}\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0,\n      })),\n      state('active', style({})),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}')\n      ),\n      transition('active => removed',\n        animate('{{ easeTime }}ms {{ easing }}'),\n      ),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class Toast implements OnDestroy {\n  message?: string | SafeHtml | null;\n  title?: string;\n  options: IndividualConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.toastPackage.config.easeTime,\n      easing: 'ease-in',\n    },\n  };\n  private timeout: any;\n  private intervalId: any;\n  private hideTime: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n    protected ngZone?: NgZone,\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = { ...this.state, value: 'active' };\n    if (!this.options.disableTimeOut && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = {...this.state, value: 'removed'};\n    this.outsideTimeout(() =>\n        this.toastrService.remove(this.toastPackage.toastId),\n        +this.toastPackage.config.easeTime,\n      );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (this.options.disableTimeOut\n      || this.options.extendedTimeOut === 0\n      || this.state.value === 'removed') {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  outsideTimeout(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() =>\n        this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)\n      );\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n\n  outsideInterval(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() =>\n        this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)\n      );\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n\n  private runInsideAngular(func: Function) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n\n}\n",
    "import { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\n\nexport class DefaultGlobalConfig implements GlobalConfig {\n  // Global\n  maxOpened = 0;\n  autoDismiss = false;\n  newestOnTop = true;\n  preventDuplicates = false;\n  iconClasses = {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  };\n\n  // Individual\n  toastComponent = Toast;\n  closeButton = false;\n  disableTimeOut: false;\n  timeOut = 5000;\n  extendedTimeOut = 1000;\n  enableHtml = false;\n  progressBar = false;\n  toastClass = 'toast';\n  positionClass = 'toast-top-right';\n  titleClass = 'toast-title';\n  messageClass = 'toast-message';\n  easing = 'ease-in';\n  easeTime = 300;\n  tapToDismiss = true;\n  onActivateTick = false;\n  progressAnimation: 'decreasing' | 'increasing' = 'decreasing';\n}\n",
    "import { CommonModule } from '@angular/common';\nimport {\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\n\nimport { Overlay } from '../overlay/overlay';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { DefaultGlobalConfig } from './default-config';\nimport { TOAST_CONFIG } from './toast-token';\nimport { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Toast],\n  declarations: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  constructor(@Optional() @SkipSelf() parentModule: ToastrModule) {\n    if (parentModule) {\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: { config, defaults: DefaultGlobalConfig } },\n        OverlayContainer,\n        Overlay,\n        ToastrService,\n      ],\n    };\n  }\n}\n",
    "import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef,\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = remaining / this.options.timeOut * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(\r\n      () => this.toastrService.remove(this.toastPackage.toastId),\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (this.options.disableTimeOut\r\n      || this.options.extendedTimeOut === 0\r\n      || this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut,\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation],\r\n})\r\nexport class ToastNoAnimationModule {}\r\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "ComponentPortal",
    "component",
    "injector",
    "this",
    "prototype",
    "attach",
    "host",
    "newestOnTop",
    "_attachedHost",
    "detach",
    "undefined",
    "defineProperty",
    "get",
    "setAttachedHost",
    "BasePortalHost",
    "portal",
    "_attachedPortal",
    "attachComponentPortal",
    "_disposeFn",
    "setDisposeFn",
    "fn",
    "DomPortalHost",
    "_super",
    "_hostDomElement",
    "_componentFactoryResolver",
    "_appRef",
    "_this",
    "call",
    "__",
    "constructor",
    "create",
    "tslib_1.__extends",
    "componentRef",
    "componentFactory",
    "resolveComponentFactory",
    "attachView",
    "hostView",
    "detachView",
    "destroy",
    "insertBefore",
    "_getComponentRootNode",
    "firstChild",
    "appendChild",
    "rootNodes",
    "OverlayRef",
    "_portalHost",
    "OverlayContainer",
    "getContainerElement",
    "_containerElement",
    "_createContainer",
    "container",
    "document",
    "createElement",
    "classList",
    "add",
    "body",
    "Overlay",
    "_overlayContainer",
    "_paneElements",
    "positionClass",
    "overlayContainer",
    "_createOverlayRef",
    "getPaneElement",
    "_createPaneElement",
    "pane",
    "id",
    "_createPortalHost",
    "type",
    "Injectable",
    "ComponentFactoryResolver",
    "ApplicationRef",
    "OVERLAY_PROVIDERS",
    "ToastContainerDirective",
    "el",
    "nativeElement",
    "Directive",
    "args",
    "selector",
    "exportAs",
    "ElementRef",
    "ToastContainerModule",
    "NgModule",
    "declarations",
    "exports",
    "ToastPackage",
    "toastId",
    "config",
    "message",
    "title",
    "toastType",
    "toastRef",
    "_onTap",
    "Subject",
    "_onAction",
    "afterClosed",
    "subscribe",
    "complete",
    "triggerTap",
    "next",
    "onTap",
    "asObservable",
    "triggerAction",
    "action",
    "onAction",
    "ToastRef",
    "_overlayRef",
    "_afterClosed",
    "_activate",
    "_manualClose",
    "manualClose",
    "manualClosed",
    "close",
    "isInactive",
    "isStopped",
    "activate",
    "afterActivate",
    "ToastInjector",
    "_toastPackage",
    "_parentInjector",
    "token",
    "notFoundValue",
    "TOAST_CONFIG",
    "InjectionToken",
    "ToastrService",
    "overlay",
    "_injector",
    "sanitizer",
    "ngZone",
    "currentlyActive",
    "toasts",
    "index",
    "defaultConfig",
    "defaults",
    "toastrConfig",
    "assign",
    "iconClasses",
    "show",
    "override",
    "_preBuildNotification",
    "applyConfig",
    "success",
    "error",
    "info",
    "warning",
    "clear",
    "_a",
    "o",
    "m",
    "Symbol",
    "iterator",
    "i",
    "length",
    "value",
    "done",
    "tslib_1.__values",
    "_b",
    "toast",
    "remove",
    "found",
    "_findToast",
    "activeToast",
    "splice",
    "maxOpened",
    "isDuplicate",
    "onActivateTick",
    "run",
    "_buildNotification",
    "toastComponent",
    "Error",
    "preventDuplicates",
    "previousToastMessage",
    "keepInactive",
    "autoDismiss",
    "overlayRef",
    "sanitizedMessage",
    "enableHtml",
    "sanitize",
    "SecurityContext",
    "HTML",
    "toastPackage",
    "toastInjector",
    "ins",
    "onShown",
    "onHidden",
    "setTimeout",
    "push",
    "decorators",
    "Inject",
    "Injector",
    "DomSanitizer",
    "NgZone",
    "Toast",
    "toastrService",
    "width",
    "toastClasses",
    "state",
    "params",
    "easeTime",
    "easing",
    "options",
    "toastClass",
    "sub",
    "activateToast",
    "sub1",
    "ngOnDestroy",
    "unsubscribe",
    "clearInterval",
    "intervalId",
    "clearTimeout",
    "timeout",
    "disableTimeOut",
    "timeOut",
    "outsideTimeout",
    "hideTime",
    "Date",
    "getTime",
    "progressBar",
    "outsideInterval",
    "updateProgress",
    "now",
    "remaining",
    "progressAnimation",
    "tapToast",
    "tapToDismiss",
    "stickAround",
    "delayedHideToast",
    "extendedTimeOut",
    "func",
    "runOutsideAngular",
    "runInsideAngular",
    "setInterval",
    "Component",
    "template",
    "animations",
    "trigger",
    "style",
    "display",
    "opacity",
    "transition",
    "animate",
    "preserveWhitespaces",
    "HostBinding",
    "HostListener",
    "DefaultGlobalConfig",
    "closeButton",
    "titleClass",
    "messageClass",
    "ToastrModule",
    "parentModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "useValue",
    "imports",
    "CommonModule",
    "entryComponents",
    "Optional",
    "SkipSelf",
    "ToastNoAnimation",
    "appRef",
    "tick",
    "ToastNoAnimationModule"
  ],
  "mappings": "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"
}
